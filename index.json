[{"content":"문제 https://school.programmers.co.kr/learn/courses/30/lessons/12939\n풀이 시도 1\nstring 형태로 연산자 비교시 음수일 경우에 예외가 발생하게 됩니다. 따라서 배열을 돌면서 Int형으로 변경해준 이후 연산했습니다.\ndef solution(s): arr = [] for char in s.split(\u0026#34; \u0026#34;): arr.append(int(char)) answer = str(min(arr)) + \u0026#34; \u0026#34; + str(max(arr)) return answer 다른사람 풀이\ndef solution(s): s = list(map(int,s.split())) return str(min(s)) + \u0026#34; \u0026#34; + str(max(s)) def solution(s): return str(min([int(i) for i in s.split(\u0026#39; \u0026#39;)])) + \u0026#39; \u0026#39; + str(max([int(i) for i in s.split(\u0026#39; \u0026#39;)])) ","permalink":"https://cha2hyun.github.io/algorithm/programmers/lv2/12939/","summary":"연습문제","title":"12939] 최댓값과 최솟값"},{"content":"문제 https://school.programmers.co.kr/learn/courses/30/lessons/12951\n풀이 시도 1\n문자열을 공백으로 자르고 맨 앞자리가 숫자인지 확인 후 숫자가 아니면 title()이나 capitalize()로 앞글자만 대문자로 변경해주려 했습니다. 쉽다고 생각했는데 44.4점으로 런타임 에러가 발생했습니다.\ndef solution(s): answer = \u0026#39;\u0026#39; arr = s.split(\u0026#34; \u0026#34;) for string in arr: if string[0].isalpha(): answer += string.title() + \u0026#34; \u0026#34; else: answer += string + \u0026#34; \u0026#34; return answer[:-1] 시도 2\n문자열을 돌면서 flag를 이용해서 첫번째가 숫자인지 알파벳인지 확인하고 공백이 있을경우 flag값을 변경했습니다. 66.7점으로 런타임 에러가 발생했습니다.\ndef solution(s): answer = \u0026#39;\u0026#39; flag = True for char in s: if char.isdigit(): answer += char flag = False elif flag: answer += char.upper() flag = False elif char == \u0026#34; \u0026#34;: answer += \u0026#34; \u0026#34; flag = True else: answer += char.lower() return answer 시도 3\n1번 풀이에서 앞글자가 숫자인지 판별하는 조건문을 뺐습니다.\ndef solution(s): answer = \u0026#39;\u0026#39; s = s.split(\u0026#39; \u0026#39;) for i in range(len(s)): s[i] = s[i].capitalize() answer=\u0026#39; \u0026#39;.join(s) return answer 다른사람 풀이\ndef solution(s): return \u0026#39; \u0026#39;.join([word.capitalize() for word in s.split(\u0026#34; \u0026#34;)]) ","permalink":"https://cha2hyun.github.io/algorithm/programmers/lv2/12951/","summary":"연습문제","title":"12951] JadenCase 문자열 만들기"},{"content":"문제 https://school.programmers.co.kr/learn/courses/30/lessons/70129\n풀이 시도 1\nx의 모든 0을 제거합니다. 어차피 문자열이 0과 1밖에 없으므로 현재 길이에서 0의 갯수를 빼면된다. (굳이 0이 빠졌을때 어떤 값이 나오는지 값을 저장하지 않아도 된다.) x의 길이를 c라고 하면, x를 \u0026ldquo;c를 2진법으로 표현한 문자열\u0026quot;로 바꿉니다. format(s, \u0026lsquo;b\u0026rsquo;) -\u0026gt; 2진수로 변환하는 내장함수 def solution(s): delete_zero_cnt = 0 while_cnt = 0 while True: if s == \u0026#34;1\u0026#34;: break while_cnt += 1 zero_cnt = 0 for char in s: if char == \u0026#34;0\u0026#34;: zero_cnt += 1 delete_zero_cnt += zero_cnt s = len(s) - zero_cnt # 이진수로 변환 s = format(s, \u0026#39;b\u0026#39;) return [while_cnt, delete_zero_cnt] 다른사람 풀이\ndef solution(s): a, b = 0, 0 while s != \u0026#39;1\u0026#39;: a += 1 num = s.count(\u0026#39;1\u0026#39;) b += len(s) - num s = bin(num)[2:] return [a, b] ","permalink":"https://cha2hyun.github.io/algorithm/programmers/lv2/70129/","summary":"월간 코드 챌린지 시즌1","title":"70129] 이진 변환 반복하기"},{"content":"들어가며 다룰 내용 낭만스키의 기능중 하나인 전국의 스키장의 모든 슬로프 현황을 실시간으로 불러와서 동일한 포맷의 형태로 제공해주는 것을 만드는 과정에 대해서 작성합니다.\n슬로프 현황은 0.1초가 중요할 만큼 실시간성이 필요하지 않기 때문에 크롤링만 담당하는 크롤러 서버를 구축해서 일정 시간마다 한번씩 모든 리조트 사이트를 돌면서 DB에 저장하는 방식을 사용했습니다. 프론트에서 슬로프 현황을 요청할때는 메인 API에서 저장한 DB로 부터 데이터를 표시했습니다.\n여러 시행착오 끝에 가장 빠르게, 가장 효과적인 구조로 크롤링을 하는 방법에 대해 작성했습니다.\n실행 환경 로컬에서 테스트용으로 사용되는 환경은 다음과 같습니다.\nOS : MacOS Monterey (Mac Studio) Versions : pipenv(pyenv python3.10.3), FastAPI(0.84) Etc : Talend Api Tester, Mysql(AWS RDS) requests vs grequests vs aiohttp 무엇이 제일 빠른가? 왜 빨라야 할까? [문제점] 전국의 리조트 15곳을 순차적으로 크롤링하기 떄문에 유저가 업데이트된 정보를 요청하거나 문제가 생겼을 때 강제로 다시 크롤링 로직을 도는데 결과를 반환받기 까지 수초가 걸렸습니다.\n크롤링 -\u0026gt; db insert -\u0026gt; 다음 리조트 크롤링 -\u0026gt; ... 반복 -\u0026gt; 메인 서버에서 결과값 반환\n[해결방안] aiohttp를 이용해서 비동기 방식으로 변경하고 DB에 insert 할때도 크롤링 결과를 모아 bulk_update를 이용하는 방식으로 변경하여 걸리는 시간을 0.5초 이내로 낮출 수 있었습니다.\n비동기 크롤링 -\u0026gt; bulk_update로 한번에 insert -\u0026gt; 메인 서버에서 결과값 반환\n[테스트방법] requests, grequests, aiohttp를 로컬에서 돌아가는 테스트 서버에 100번씩 요청을 보냈을때 속도를 비교해보고 가장 빠른 방법을 선택했습니다.\n테스트로 사용할 간단한 FastAPI를 실행시켰습니다. 요청을 0.1초 후에 리턴합니다.\n# url : http://127.0.0.1:8002/test/{num} @app.get(\u0026#34;/test/{num}\u0026#34;) def get_test(num): import time time.sleep(0.1) return {\u0026#34;num\u0026#34;: num} requests 테스트 테스틀 위해서 앞서 만든 url로 get 요청을 100번 보내서 평균을 내어 1개 요청에 몇초가 소요됬는지 확인해봅니다.\nInstall requests\npipenv install requests code\ndef request_test(): import requests import time start = time.time() cnt = 100 for i in range(1, cnt + 1): url = f\u0026#34;http://127.0.0.1:8002/test/{i}\u0026#34; res = requests.get(url) total = round(time.time() - start, 4) average = round(total/cnt, 4) print(f\u0026#34;Total -\u0026gt; {total}sec\u0026#34;) print(f\u0026#34;Avg -\u0026gt; {average}sec\u0026#34;) request_test() result\nTotal -\u0026gt; 11.1368sec Avg -\u0026gt; 0.1114sec grequests 테스트 grequests 는 Gevent를 이용하여 비동기 http request를 할 수 있는 라이브러리입니다. https://github.com/spyoungtech/grequests 마찬가지로 100번의 요청을 보내봤습니다.\ninstall grequests\npipenv install grequests code\ndef grequest_test(): import grequests import time cnt = 100 urls = [f\u0026#34;http://127.0.0.1:8002/test/{i}\u0026#34; for i in range(1, cnt+1)] start = time.time() rs = (grequests.get(u) for u in urls) total = round(time.time() - start, 4) average = round(total/cnt, 4) print(f\u0026#34;Total -\u0026gt; {total}sec\u0026#34;) print(f\u0026#34;Avg -\u0026gt; {average}sec\u0026#34;) grequest_test() result\nTotal -\u0026gt; 0.4132sec Avg -\u0026gt; 0.0041sec aiohttp 테스트 비동기 크롤링에 가장 보편적으로 많이 사용되는 라이브러리 입니다. 100번의 요청을 보냅니다.\ninstall aiohttp\npipenv install aiohttp 100번의 요청을 보내봅니다.\ncode\nimport asyncio import time from aiohttp import ClientSession async def aiohttp_test(url): async with ClientSession() as session: async with session.get(url) as response: return await response.read() cnt = 100 start = time.time() loop = asyncio.get_event_loop() coroutines = [aiohttp_test(f\u0026#39;http://127.0.0.1:8002/test/{i}\u0026#39;) for i in range(cnt)] results = loop.run_until_complete(asyncio.gather(*coroutines)) total = round(time.time() - start, 4) average = round(total/cnt, 4) print(f\u0026#34;Total -\u0026gt; {total}sec\u0026#34;) print(f\u0026#34;Avg -\u0026gt; {average}sec\u0026#34;) result\nTotal -\u0026gt; 0.3705sec Avg -\u0026gt; 0.0037sec 속도 비교 결과 1개의 요청을 처리하는데 걸리는 평균 시간\nrequests : 0.1114sec grequests : 0.0041sec aiohttp : 0.0037sec 🏆 라이브러리 선택 여러번 계속 테스트 해봐도 aiohttp가 가장 빨랐습니다. 내부망에서 왔다갔다 하는거라 큰 차이가 나진 않았던 것 같습니다. 내부망이 아닌 request 테스트 사이트 requestcatcher에서 테스트해본 결과도 동일하였습니다.\n0.1초후에 응답하는 api에 100번의 요청을 보냈을 때 싱글스레드(requests)는 평균 0.1114sec 초로 한개의 요청을 끝내고 다음 요청을 진행하는 것을 볼 수 있었습니다. 비동기를 이용했을때는 평균 약 0.004초가 걸렸습니다. 제 환경에서는 약 25개의 요청을 동시에 처리할 수 있다는 점을 알 수 있었습니다.\n크롤링하는 서버의 성능에 따라 인터넷 속도나 얼만큼 많은 쓰레드를 사용할 수 있는가에 따라 속도 차이가 좀 더 나겠지만, 전국 스키장의 수가 20개가 되지 않으므로 비동기를 이용하여 모든 스키장을 크롤링을 동시에 진행할 것이고 최소 시간은 가장 크롤링이 오래걸리는 스키장이 될 것으로 예상했습니다.\nFastAPI + aiohttp로 크롤링하기 FastAPI 선택 이유 크롤링 서버는 메인서버에서 분리되어 일정 시간마다 크롤링 \u0026gt; DB Insert만 하는 아주 가볍게 돌아가는 서버이기 떄문에 Django나 Flask보다 가벼운 FastAPI를 선택했습니다. 간혹 오류나 크롤링 실패로 인해서 관리자나 프론트에서 유저가 다시 크롤링하라는 요청을 보내기 위해 get 요청을 받을 수 있게 api로 진행했습니다.\n프로젝트 트리 구조 스키장별로 제공하는 홈페이지가 모두 달랐습니다. 정적페이지로 제공하는지, API가 있는지 등 스키장마다 모두 다른 형태로 리턴받아서 구조와 클린코드를 어떻게 짜야할지 고민이 많았습니다. 같은 형식이 아닌 다양한 여러 페이지를 가장 빠르게 크롤링하고 어떤식으로 구조를 잡았는지, DB에는 어떻게 효과적으로 Insert 했는지 과정을 소개합니다.\nFastAPI 프로젝트 tree\n. ├── Dockerfile ├── docker-compose.yml ├── .env ├── requirements.txt ├── scripts │ └── db_to_orm.sh └── src ├── config (RDS 연결) │ ├── __init__.py │ └── database.py ├── constant.py (상수값 저장) ├── crawler (크롤링) │ ├── __init__.py │ ├── crawler.py ├── main.py (api) ├── model (DB모델) │ ├── __init__.py │ └── models.py ├── service (DB insert) │ ├── __init__.py │ └── slope_time_service.py └── utils (결과 Discord 전송) └── webhook.py main.py 에서 get 요청을 처리합니다. 크롤링과 관련된 내용은 crawler.py에 저장하고 크롤링에 필요한 상수값 (resort_code, resort_name 등)은 DB에서 불러와도 되지만 상수로 저장해놓고 사용하는게 더 빠르기 때문에 constant.py에 저장했습니다.\n처리순서는 다음과 같습니다.\n1. 크롤링 요청 2. aiohttp client를 생성하고 3. 코루틴 리스트 배열을 만들고 4. 비동기로 모든 리조트를 크롤링 해서 5. aiohttp client를 종료 후 6. 결과값을 배열에 모아서 7. bulk_update로 DB에 저장하고 8. 크롤링 결과를 Discord에 푸쉬 코드 cralwer \u0026gt; crawlerV3.py 여러번 테스트 결과 aiohttp 적용이 가장 빨랐다. (좌측:requests, 우측:aiohttp)\nclass SingletonAiohttp\nclass SingletonAiohttp: sem: Optional[asyncio.Semaphore] = None aiohttp_client: Optional[aiohttp.ClientSession] = None @classmethod def get_aiohttp_client(cls) -\u0026gt; aiohttp.ClientSession: if cls.aiohttp_client is None: timeout = aiohttp.ClientTimeout(total=5) connector = aiohttp.TCPConnector( family=AF_INET, limit_per_host=SIZE_POOL_AIOHTTP, ssl=False ) cls.aiohttp_client = aiohttp.ClientSession( timeout=timeout, connector=connector, trust_env=True ) return cls.aiohttp_client @classmethod async def close_aiohttp_client(cls) -\u0026gt; None: if cls.aiohttp_client: await cls.aiohttp_client.close() cls.aiohttp_client = None @classmethod async def crawl(cls, resortName: ResortName) -\u0026gt; Any: client = cls.get_aiohttp_client() resort = Resort() try: async with client.get(url=FakeDB[resortName][\u0026#34;url\u0026#34;]) as response: if response.status != 200: return {\u0026#34;ERROR OCCURED\u0026#34; + str(await response.text())} html = await response.text() if resortName == ResortName.jisan: result = resort.jisan(html) # ... elif resortName == ResortName.otwo: result = resort.otwo(html) return result except Exception as e: return {\u0026#34;ERROR\u0026#34;: e} ... async def on_start_up() -\u0026gt; None: fastAPI_logger.info(\u0026#34;on_start_up\u0026#34;) SingletonAiohttp.get_aiohttp_client() async def on_shutdown() -\u0026gt; None: fastAPI_logger.info(\u0026#34;on_shutdown\u0026#34;) await SingletonAiohttp.close_aiohttp_client() class Utility\n스키장에 따라서 어떤 곳은 슬로프명이 x축에, 어떤 곳은 y축에 있었고 어떤 곳은 슬로프 오픈 정보와 슬로프 난이도 길이 등을 같이 표시하는 곳이 있었습니다. 이런 데이터들을 규격화 하는 과정이 필요했고 크롤링 하면 무조건 2차원 배열로 [[구분, 슬로프1, 슬로프2], [시간,O,X,..], .. ,[시간,O,X,..]] 만들어서 크롤링이 성공하면 inSuccess 함수에서 DB에 넣는 형식으로 리턴해주었습니다. 크롤링하다가 Exception 발생시에는 해당 리조트의 크롤링 여부가 실패했음을 inFailed 함수가 실행됩니다.\nclass Utiliy: def inSuccess(self, resort_name, array): resortContstantDB = ResortConstant[resort_name] # ... DB 형식에 맞게 수정 array 인자는 무조건 2차원배열로 들어온다 return { \u0026#34;fetch_status\u0026#34;: { \u0026#34;resort_code\u0026#34;: resortContstantDB[\u0026#34;resort_code\u0026#34;], \u0026#34;fetch_status\u0026#34;: \u0026#34;O\u0026#34;, }, \u0026#34;slope_open_yn\u0026#34;: result, } def inFailed(self, resort_name): resortContstantDB = ResortConstant[resort_name] return { \u0026#34;fetch_status\u0026#34;: { \u0026#34;resort_code\u0026#34;: resortContstantDB[\u0026#34;resort_code\u0026#34;], \u0026#34;fetch_status\u0026#34;: \u0026#34;X\u0026#34;, }, \u0026#34;slope_open_yn\u0026#34;: [], } class Reosrt\n리조트별로 크롤링 해서 2차원 배열로 리턴합니다.\nclass Resort(Utiliy): # API로 불러올 경우 JSON def wellyhilly(self, res): resort_name = ResortName.duckyousan response = json.loads(res) # ... try: datas = response[\u0026#34;data\u0026#34;] # ... 형식에 맞게 수정 return self.makeDbInputData(resort_name, array) except Exception as e: print(\u0026#34;ERROR : \u0026#34;, e) return self.fetchFailed(resort_name) # 정적페이지인 경우 def otwo(self, html): resort_name = ResortName.otwo # ... try: html = BeautifulSoup(html, \u0026#34;lxml\u0026#34;) # ... 크롤링 return self.makeDbInputData(resort_name, array) # return self.fetchFailed(resort_name) except Exception as e: print(\u0026#34;ERROR : \u0026#34;, e) return self.fetchFailed(resort_name) config \u0026gt; database.py .env에서 rds 주소를 불러와서 db연결 세션을 만듭니다.\nfrom sqlalchemy import create_engine from sqlalchemy.ext.declarative import declarative_base from sqlalchemy.orm import sessionmaker from os import getenv SQLALCHEMY_DATABASE_URL = getenv(\u0026#34;DATABASE_URL\u0026#34;) engine = create_engine(SQLALCHEMY_DATABASE_URL) SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine) Base = declarative_base() service \u0026gt; slope_time_service.py\n성공, 실패 여부를 모아놓은 fetch_status_list와 슬로프 현황이 담긴 slope_open_yn_list를 db에 넣어줍니다. bulk_update를 이용하면 한번의 커넥션으로 데이터들을 전송할 수 있습니다.\nfrom sqlalchemy.orm import Session, aliased from sqlalchemy import select from sqlalchemy import and_ from ..config.database import SessionLocal, engine from contextlib import contextmanager from fastapi.concurrency import contextmanager_in_threadpool from ..model import models models.Base.metadata.create_all(bind=engine) def get_db(): db = SessionLocal()4 try: yield db finally: db.close()4 async def update_slope_time_bulk(fetch_status_list: list, slope_open_yn_list: list): async with contextmanager_in_threadpool(contextmanager(get_db)()) as db: try: db.bulk_update_mappings(models.SkiResort, fetch_status_list) db.bulk_update_mappings(models.SlopeTime, slope_open_yn_list) db.commit() except Exception as e: print(\u0026#34;update_slope_time_bulk Exeption :\u0026#34;, e) db.rollback() raise main.py app = FastAPI(docs_url=\u0026#34;/\u0026#34;, on_startup=[on_start_up], on_shutdown=[on_shutdown]) @app.get(\u0026#34;/slope/update\u0026#34;) async def fasterUpdateSlope() -\u0026gt; Dict[str, int]: start = time.time() # Async async_calls: List[Coroutine[Any, Any, Any]] = list() # store all async operations async_calls.append(SingletonAiohttp.crawl(ResortName.jisan)) # ... async_calls.append(SingletonAiohttp.crawl(ResortName.duckyousan)) results = await asyncio.gather(*async_calls) # wait for all async operations # Make Data .... # DB Push \u0026amp; Discord try: await slope_time_service.update_slope_time_bulk( fetch_status_list, slope_open_yn_list ) # ... if not DEBUG: discord_webhook(discord_title, discord_msg) return { \u0026#34;fetch_status_list\u0026#34;: fetch_status_list, \u0026#34;slope_open_yn_list\u0026#34;: slope_open_yn_list, } except Exception: # ... if not DEBUG: discord_webhook(discord_title, discord_msg + \u0026#34;`\u0026#34;) raise HTTPException(status_code=500, detail=\u0026#34;Server error\u0026#34;) 결과 8개 정도 리조트를 크롤링 했을때 0.3초 ~ 0.4초정도 걸렸습니다. RDS를 아직 저사양 인스턴스를 사용해서 db insert 시간이 더 길었습니다.\n슬로프 오픈 현황 (open_yn) 크롤링 성공 여부 (실패시 마지막 성공 데이터를 보여줍니다)\n꿀팁 디스코드로 결과 보내기 결과를 팀원들에게 실시간으로 공유하고 오류가 있을때는 @channel과 함께 디스코드로 푸쉬를 보냅니다.d\n결과는 discord로 받습니다. Rds 성능이 낮아서 DB Insert 속도가 조금 느립니다.\nimport requests from os import getenv from dotenv import load_dotenv def discord_webhook(title, msg): load_dotenv() url = getenv(\u0026#34;DISCORD_CRAWLER_MONITOR_URL\u0026#34;) data = { \u0026#34;content\u0026#34;: msg, \u0026#34;username\u0026#34;: title, } requests.post(url, json=data) CSR 페이지 공략 CSR로 만들어져서 브라우져가 렌더링하는 페이지일 경우에 최대한 셀레늄을 사용하지 않으려고 선택한 방법입니다. (\u0026hellip;계속)\n","permalink":"https://cha2hyun.github.io/projects/%EB%82%AD%EB%A7%8C%EC%8A%A4%ED%82%A4/fastapi_aiohttp/","summary":"서버에서 크롤링을하여 데이터를 가공하여 DB에 저장해야 할때 어떤 방법이 가장 적합했는지 기록합니다.","title":"전국 스키장 슬로프 실시간 정보 (빠르게)크롤링 하기"},{"content":"문제 https://school.programmers.co.kr/learn/courses/30/lessons/12941\n풀이 시도 1\nA, B 배열에서 배열길이만큼 A에서 제일 큰수 * B에서 제일 작은수를 돌면서 곱한건 배열에서 삭제했습니다. 효율성 테스트에서 시간초과가 났습니다. 69.6점\ndef solution(A, B): length = len(A) total = 0 for i in range(length): Max = max(A) Min = min(B) A.remove(Max) B.remove(Min) total += Max * Min return total 시도 2\nA는 내림차순, B는 오름차순으로 먼저 정렬후에 같은 원소 번호끼리 곱해서 더했습니다.\ndef solution(A, B): total = 0 A.sort(reverse = True) # A.reverse() B.sort() for i in range(len(A)): total += A[i] * B[i] return total 다른사람 풀이\ndef getMinSum(A,B): return sum(a*b for a, b in zip(sorted(A), sorted(B, reverse = True))) ","permalink":"https://cha2hyun.github.io/algorithm/programmers/lv2/12941/","summary":"연습문제","title":"12941] 최솟값 만들기"},{"content":"문제 https://school.programmers.co.kr/learn/courses/30/lessons/12909\n풀이 시도 1\n스택을 활용합니다. 빈 스택일때 (가 들어오면 바로 False를 리턴해야 시간초과가 나지 않습니다.\ndef solution(s): stack = [] if s[-1] == \u0026#39;(\u0026#39;: return False for i in s: if i == \u0026#39;(\u0026#39;: stack.append(i) else: if stack == []: return False else: stack.pop() return stack == [] 다른사람 풀이\ndef is_pair(s): x = 0 for w in s: if x \u0026lt; 0: break x = x+1 if w==\u0026#34;(\u0026#34; else x-1 if w==\u0026#34;)\u0026#34; else x return x==0 ","permalink":"https://cha2hyun.github.io/algorithm/programmers/lv2/12909/","summary":"스택/큐","title":"12909] 올바른 괄호"},{"content":"문제 https://school.programmers.co.kr/learn/courses/30/lessons/43105\n풀이 시도 1 index 에러를 없애기 위해 배열 앞뒤에 0을 추가후 top-down 으로 내려가면서 현재 배열 원소에 최대값을 더해주고 마지막 배열중 가장 최대값을 리턴합니다.\ndef solution(triangle): # index 에러 방지 위해 앞 뒤에 0인 원소를 추가합니다. triangle = [[0] + line + [0] for line in triangle] # print(triangle) # 맨앞은 0이니깐 1부터 for i in range(1, len(triangle)): # 맨앞은 0이고 2씩 증가하여 가운데 수를 넘어뛰어도 됨 for j in range(1, i+2): # 현재 원소 + 이전 인접하는 두개의 원소중 최대값을 더함 triangle[i][j] += max(triangle[i-1][j-1], triangle[i-1][j]) # 마지막줄 원소중 최대값 리턴 return max(triangle[-1]) s = solution([[7], [3, 8], [8, 1, 0], [2, 7, 4, 4], [4, 5, 2, 6, 5]]) print(s) 다른사람풀이 solution = lambda t, l = []: max(l) if not t else solution(t[1:], [max(x,y)+z for x,y,z in zip([0]+l, l+[0], t[0])]) ","permalink":"https://cha2hyun.github.io/algorithm/programmers/lv3/43105/","summary":"동적계획법(Dynamic Programing","title":"43105] 올바른 괄호"},{"content":"문제 https://school.programmers.co.kr/learn/courses/30/lessons/12924\n풀이 시도 1\n1부터 n의 절반까지 하나씩 덧셈하면서 n을 넘어가면 break, n의절반 + n의절반+1은 무조건 n을 넘어가니 break를 걸었습니다. 본인의 수도 포함되야 하므로 리턴할때 1을 더했습니다. 95.8점으로 실패하였습니다.\ndef solution(n): answer = 0 for x in range(1, (n + 1)): temp = 0 for y in range(x, (n + 1) // 2 + 1): temp += y if temp == n: answer += 1 break elif temp \u0026gt; n: break return answer + 1 시도 2\n규칙을 찾아봅니다.\nx + (x+1) + ... + (x+k-1) = k(2x+k-1) / 2 = n x = n/k + (1-k)/2 n/k와 (1-k)/2 가 자연수가 되어야하므로 k는 홀수이면서 n의 약수여야 한다. def solution(n): answer = 0 for i in range(1, n + 1, 2): # 2만큼 증가하여 짝수는 고려하지 않음 if n % i == 0: answer += 1 return answer 다른사람 풀이\ndef expressions(num): return len([i for i in range(1,num+1,2) if num % i is 0]) ","permalink":"https://cha2hyun.github.io/algorithm/programmers/lv2/12924/","summary":"스택/큐","title":"12924] 숫자의 표현"},{"content":"문제 https://school.programmers.co.kr/learn/courses/30/lessons/12945\n풀이 시도 1\n재귀를 사용하지 않고 for문으로 돌렸습니다.\ndef solution(n): fabo = [None] * (n + 1) fabo[0] = 0 fabo[1] = 1 for i in range(n + 1): if i \u0026lt; 2: pass else: fabo[i] = (fabo[i - 1] + fabo[i - 2]) % 1234567 return fabo[n] 다른사람 풀이\ndef fibonacci(num): a,b = 0,1 for i in range(num): a,b = b,a+b return a print(fibonacci(3)) ","permalink":"https://cha2hyun.github.io/algorithm/programmers/lv2/12945/","summary":"연습문제","title":"12945] 피보나치 수"},{"content":"문제 https://school.programmers.co.kr/learn/courses/30/lessons/12911\n풀이 시도 1\nwhile문 돌면서 n을 1씩 더해서 2진수로 변환했을때 \u0026ldquo;1\u0026quot;의 갯수가 원래 n의 2진수로 변환했을때 \u0026ldquo;1\u0026quot;의 갯수와 같으면 리턴했습니다. 다음 자연수를 찾는거에 시간복잡도가 크지 않을 거라 생각했습니다.\ndef solution(n): cnt = format(n, \u0026#34;b\u0026#34;).count(\u0026#34;1\u0026#34;) n += 1 while True: if format(n, \u0026#34;b\u0026#34;).count(\u0026#34;1\u0026#34;) == cnt: return n n += 1 다른사람 풀이\n가독성은 좋지 않지만 pythonic ..\ndef nextBigNumber(n, count = 0): return n if bin(n).count(\u0026#34;1\u0026#34;) is count else nextBigNumber(n+1, bin(n).count(\u0026#34;1\u0026#34;) if count is 0 else count) ","permalink":"https://cha2hyun.github.io/algorithm/programmers/lv2/12911/","summary":"연습문제","title":"12911] 다음 큰 숫자"},{"content":"Homebrew brew 설치\n/bin/bash -c \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\u0026#34; # brew 설치 후 터미널에 표시되는 export 부분을 복붙해서 터미널에 치고 다시 터미널을 킬 것 brew install cask brew update brew로 설치 가능한 앱 리스트 확인 \u0026gt; https://formulae.brew.sh/ 후 필요한 거 설치하기\n2022년 10월 06일 기준 설치했던 리스트\nbrew list ==\u0026gt; Formulae autoconf\tlibtasn1 bdw-gc\tlibtool boost\tlibunistring bzip2\tlz4 ca-certificates\tm4 cask\tmpdecimal coreutils\tnettle double-conversion\tnvm emacs\topenssl@1.1 fb303\topenssl@3 fbthrift\tp11-kit fizz\tpcre fmt\tpcre2 folly\tpipenv gdbm\tpkg-config gettext\tpyenv gflags\tpyenv-virtualenv gh\tpython@3.10 glog\tpython@3.9 gmp\treadline gnutls\tsix go\tsnappy guile\tsqlite hugo\ttree icu4c\tunbound jansson\twangle libevent\twatchman libffi\txz libidn2\tzlib libnghttp2\tzstd libsodium ==\u0026gt; Casks adoptopenjdk14\tmicrosoft-remote-desktop bettertouchtool\tnotion dbeaver-community\tscroll-reverser discord\tslack figma\tstats firefox\tsynology-chat google-chrome\tvisual-studio-code iterm2\tbetterdisplay iterm2 상태바 활성화\n설정 \u0026gt; Profiles \u0026gt; Sessions \u0026gt; Status bar enable 테마설정 다운로드 : github dark theme\n테마 다운로드 후 확장자를 .itermcolors 로 변경 설정 \u0026gt; Profiles \u0026gt; Colors \u0026gt; Color Presets \u0026gt; 테마선택 OH MY ZSH \u0026amp; Powerlevel10k oh my zsh 설치\nsh -c \u0026#34;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\u0026#34; Powerlevel10k 설치\ngit clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k .zshrc 파일 수정\nZSH_THEME=\u0026#34;powerlevel10k/powerlevel10k\u0026#34; gh 설치 brew install gh gh auth login # http를 선택 rosetta (M1 only) /usr/sbin/softwareupdate --install-rosetta --agree-to-license vscode preferences \u0026gt; Setting sync on \u0026gt; github login Font D2coding\nBettertouchtools 아래 파일을 \u0026lsquo;Default.bttpreset\u0026rsquo; 으로 저장 후 실행시킨다.\nDefault.bttpreset { \u0026quot;BTTPresetCreatorNotes\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;BTTPresetInfoURL\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;BTTPresetName\u0026quot;: \u0026quot;Default\u0026quot;, \u0026quot;BTTGeneralSettings\u0026quot;: { \u0026quot;BTTPathSampleSize\u0026quot;: 100, \u0026quot;BTTCMOnTop\u0026quot;: true, \u0026quot;BTTForceForceClickPressure2F\u0026quot;: 700, \u0026quot;BSTLeftHalfBlock\u0026quot;: true, \u0026quot;BTTMinDrawingMovement\u0026quot;: 2, \u0026quot;BTTTouchBarMouseModeClickBlock\u0026quot;: true, \u0026quot;BSTRightHalfBlock\u0026quot;: true, \u0026quot;disableScrollingIf2\u0026quot;: true, \u0026quot;batteryWarning\u0026quot;: false, \u0026quot;BSTDontShowSnapAreasWhileModMoving\u0026quot;: 0, \u0026quot;BSTWindowGrabPosY\u0026quot;: 10, \u0026quot;showTrackpadTab\u0026quot;: true, \u0026quot;singleFingerTapRight\u0026quot;: 0.05000000074505806, \u0026quot;BTTDrawingStrokeWidth\u0026quot;: 4, \u0026quot;cornerSnap\u0026quot;: true, \u0026quot;BTRScrollSpeed\u0026quot;: 1, \u0026quot;BTTTouchBarHapticFeedbackRelease\u0026quot;: 0, \u0026quot;BSTIncreaseSnappingArea\u0026quot;: true, \u0026quot;showDrawingsTab\u0026quot;: true, \u0026quot;SIRIMouseSpeed\u0026quot;: 1, \u0026quot;BTTUseNewUI\u0026quot;: true, \u0026quot;BSTEnableEnhancementCheck\u0026quot;: true, \u0026quot;BTTNotchBarNotchWidgetModeHideLeftFixed\u0026quot;: false, \u0026quot;useAppleRemotePlugin\u0026quot;: false, \u0026quot;BTTTouchBarFontSize\u0026quot;: 15, \u0026quot;BSTSnapAreaDefaultPictoDistanceFromBottom\u0026quot;: 0.10000000149011612, \u0026quot;BTRMouseSpeed\u0026quot;: 1, \u0026quot;BSTPreventTopMissionControl\u0026quot;: true, \u0026quot;BSTSnapAreaDefaultDashedBorder\u0026quot;: false, \u0026quot;BTTEnablePalmRecognition\u0026quot;: true, \u0026quot;BSTBrokenAPICheckEnabled\u0026quot;: false, \u0026quot;BTTAllowThumbIfAllFingersArePlacedSimultaneously\u0026quot;: true, \u0026quot;BTTNotchBarStandardMenubarModeHideRightFixed\u0026quot;: false, \u0026quot;BTTNotchBarNotchWidgetModeShowMiniMenubar\u0026quot;: true, \u0026quot;BTTShowControlStripItem\u0026quot;: true, \u0026quot;BSTSnapAreaDefaultCornerRadius\u0026quot;: 20, \u0026quot;BTTNotchBarNotchMenubarModeHideLeftFixed\u0026quot;: true, \u0026quot;BTTMovePastedToTop\u0026quot;: true, \u0026quot;BTTMaxAllowedDrawingRotation\u0026quot;: 30, \u0026quot;BTTDidRegisterForUpdateStats\u0026quot;: \u0026quot;3.870\u0026quot;, \u0026quot;BTTNotchBarNotchWidgetModeHideRightFixed\u0026quot;: false, \u0026quot;BTTTpFourFingerSwipeSensitivity\u0026quot;: 0.40000000000000002, \u0026quot;BSTMoveTreshold\u0026quot;: 2, \u0026quot;BTTHideFomControlStripWhenOpen\u0026quot;: false, \u0026quot;BTTNumberOfStarts\u0026quot;: 1081, \u0026quot;BTTForceNormalClickPressure3F\u0026quot;: 150, \u0026quot;showSiriRemoteTab\u0026quot;: true, \u0026quot;SIRIScrollSpeed\u0026quot;: 1, \u0026quot;BTTShowControlStrip\u0026quot;: true, \u0026quot;tpThreeFingerDoubleTapDelay\u0026quot;: 0.5, \u0026quot;showNormalMiceTab\u0026quot;: true, \u0026quot;BTTNotchBarStandardMenubarModeHideLeftScrollable\u0026quot;: true, \u0026quot;BSTSnapAreaDefaultBorderWidth\u0026quot;: 3, \u0026quot;BTTTouchBarHapticFeedback\u0026quot;: 0, \u0026quot;BTTForceNormalClickPressure\u0026quot;: 150, \u0026quot;BTTDrawingRightMouse\u0026quot;: true, \u0026quot;BTTConvertedDevices\u0026quot;: true, \u0026quot;snapBottomRight\u0026quot;: true, \u0026quot;BTTThreeFingerTipTapMinSpread\u0026quot;: 0.029999999999999999, \u0026quot;BTTTouchBarVisible\u0026quot;: false, \u0026quot;BTTIMGURDefault\u0026quot;: true, \u0026quot;BSTSnapAreaDefaultBackgroundColor\u0026quot;: \u0026quot;129.991390, 201.122858, 227.012328, 104.550000\u0026quot;, \u0026quot;BSTSnapAreaDefaultPictoSize\u0026quot;: 0.69999998807907104, \u0026quot;BSTSnapAreaDefaultBorderColor\u0026quot;: \u0026quot;0.000000, 0.000000, 0.000000, 255.000000\u0026quot;, \u0026quot;BTTNotchBarNotchMenubarModeHideLeftScrollable\u0026quot;: true, \u0026quot;BTTNotchBarNotchMenubarModeShowOriginalStatusIcons\u0026quot;: true, \u0026quot;BSTTopMissionControlTreshold\u0026quot;: 34, \u0026quot;BTTNotchBarNotchWidgetModeHideRightScrollable\u0026quot;: false, \u0026quot;BSTSnapAreaDefaultHighlightColor\u0026quot;: \u0026quot;92.625547, 122.647995, 161.664332, 56.100000\u0026quot;, \u0026quot;BTTForceForceClickPressure5F\u0026quot;: 600, \u0026quot;BTTForceForceClickPressure\u0026quot;: 700, \u0026quot;BSTMemorySaver\u0026quot;: true, \u0026quot;BTTLastClamshellState\u0026quot;: false, \u0026quot;BTTTouchBarAnimateGroups\u0026quot;: true, \u0026quot;BTTShowBTTWhenControlStripHidden\u0026quot;: true, \u0026quot;BTTFreeSpaceAfterESC\u0026quot;: 10, \u0026quot;mmZoomRepeatDelay\u0026quot;: 0.10000000000000001, \u0026quot;snapTopLeft\u0026quot;: true, \u0026quot;BTTDrawingAreaWidth\u0026quot;: 915, \u0026quot;BTTTiltWheelDelay\u0026quot;: 0.44999998807907104, \u0026quot;twoFingerDoubleTapDelay\u0026quot;: 0.5, \u0026quot;BTTForceNormalClickPressure5F\u0026quot;: 200, \u0026quot;BTTShowESCWhenControlStripHidden\u0026quot;: true, \u0026quot;showBTTRemoteTab\u0026quot;: true, \u0026quot;BTTFilterMagicMouseLeftRightEdge\u0026quot;: true, \u0026quot;BTTNotchBarStandardWidgetModeShowOriginalStatusIcons\u0026quot;: false, \u0026quot;BTTDrawingsHighlightStartPoint\u0026quot;: true, \u0026quot;BTTEnableUsageLogging\u0026quot;: true, \u0026quot;snapBottomLeft\u0026quot;: true, \u0026quot;BTTScreenshotOpenImgurInBrowser\u0026quot;: true, \u0026quot;BTTDontRestartAfterSleep\u0026quot;: true, \u0026quot;BTTForceNormalClickPressure2F\u0026quot;: 140, \u0026quot;BSTSnapAreaDefaultInvisible\u0026quot;: false, \u0026quot;BTTDrawingAreaHeight\u0026quot;: 626, \u0026quot;BTTForceForceClickPressure4F\u0026quot;: 650, \u0026quot;BTTTouchBarUseMonoSpacedFont\u0026quot;: true, \u0026quot;BSTCornerRoundness\u0026quot;: 10.028582317073171, \u0026quot;BTTForceForceHapticResponse\u0026quot;: 13, \u0026quot;BTTNotchBarStandardMenubarModeHideLeftFixed\u0026quot;: true, \u0026quot;showMagicMouseTab\u0026quot;: true, \u0026quot;BTTNotchBarNotchWidgetModeShowOriginalStatusIcons\u0026quot;: false, \u0026quot;BTTAlwaysShowPresetIndicators\u0026quot;: true, \u0026quot;showTouchBarTab\u0026quot;: true, \u0026quot;BTTFreeSpaceAfterBTT\u0026quot;: 20, \u0026quot;BTTNotchBarStandardWidgetModeHideRightFixed\u0026quot;: false, \u0026quot;BTTTwoFingerTipTapMinSpread\u0026quot;: 0.029999999999999999, \u0026quot;BTTDismissIfNothingToShow\u0026quot;: true, \u0026quot;BTTDrawingsRestoreMousePosition\u0026quot;: true, \u0026quot;BSTDisableSnapAreas\u0026quot;: false, \u0026quot;BTTDefaultTBIconWidth\u0026quot;: 22, \u0026quot;snapTopRight\u0026quot;: true, \u0026quot;BSTSnapAreaDefaultShowPictogram\u0026quot;: false, \u0026quot;BTTSelectedKeyboardTabIndex\u0026quot;: 0, \u0026quot;BTTTouchBarKeepIconRatio\u0026quot;: true, \u0026quot;BSTBrokenAPICheckDelay\u0026quot;: 0.20000000000000001, \u0026quot;showKeyboardTab\u0026quot;: true, \u0026quot;BTTForceForceClickPressure3F\u0026quot;: 700, \u0026quot;disableScrollingIf3\u0026quot;: true, \u0026quot;BSTWindowGrabPosX\u0026quot;: 67, \u0026quot;BTTHandleThumbsRestingOnTopEdgeAndCorners\u0026quot;: true, \u0026quot;BTTAutoSwitchToOldKeyboardImplementation\u0026quot;: true, \u0026quot;BTTTpThreeFingerSwipeSensitivity\u0026quot;: 0.29999999999999999, \u0026quot;BTTCopyImgurURLToClipboard\u0026quot;: true, \u0026quot;BTTForceNormalHapticResponse\u0026quot;: 12, \u0026quot;BTTTouchBarSupportEnabled\u0026quot;: true, \u0026quot;BTTDaysToKeepHistory\u0026quot;: 14, \u0026quot;BTTNotchBarNotchMenubarModeHideRightFixed\u0026quot;: true, \u0026quot;BTTDefaultTBIconHeight\u0026quot;: 22, \u0026quot;BTTNotchBarStandardMenubarModeShowOriginalStatusIcons\u0026quot;: true, \u0026quot;BTTNotchBarStandardWidgetModeHideLeftFixed\u0026quot;: false, \u0026quot;singleFingerTapLeft\u0026quot;: 0.44999998807907104, \u0026quot;BTTNotchBarStandardWidgetModeHideLeftScrollable\u0026quot;: false, \u0026quot;BTTForceNormalClickPressure4F\u0026quot;: 175, \u0026quot;BTTNotchBarNotchWidgetModeHideLeftScrollable\u0026quot;: false, \u0026quot;BSTSnapAreaDefaultAnimationDuration\u0026quot;: 0.30000001192092896, \u0026quot;BTTNotchBarStandardWidgetModeHideRightScrollable\u0026quot;: false, \u0026quot;BTTNotchBarStandardMenubarModeHideRightScrollable\u0026quot;: false, \u0026quot;showOtherTriggersTab\u0026quot;: true, \u0026quot;BTTNotchBarNotchMenubarModeHideRightScrollable\u0026quot;: true, \u0026quot;BSTSnapAreaDefaultPictoDistanceFromLeft\u0026quot;: 0.10000000149011612 }, \u0026quot;BTTPresetUUID\u0026quot;: \u0026quot;2375A6E0-2E42-46FC-B2CA-FECB49079972\u0026quot;, \u0026quot;BTTPresetContent\u0026quot;: [ { \u0026quot;BTTAppBundleIdentifier\u0026quot;: \u0026quot;com.apple.finder\u0026quot;, \u0026quot;BTTAppName\u0026quot;: \u0026quot;Finder\u0026quot;, \u0026quot;BTTAppAutoInvertIcon\u0026quot;: 1, \u0026quot;BTTTriggers\u0026quot;: [ ] }, { \u0026quot;BTTAppBundleIdentifier\u0026quot;: \u0026quot;BT.G\u0026quot;, \u0026quot;BTTAppName\u0026quot;: \u0026quot;Global\u0026quot;, \u0026quot;BTTAppAutoInvertIcon\u0026quot;: 1, \u0026quot;BTTTriggers\u0026quot;: [ { \u0026quot;BTTTriggerType\u0026quot;: 108, \u0026quot;BTTTriggerTypeDescription\u0026quot;: \u0026quot;4 Finger Swipe Up\u0026quot;, \u0026quot;BTTTriggerClass\u0026quot;: \u0026quot;BTTTriggerTypeTouchpadAll\u0026quot;, \u0026quot;BTTPredefinedActionType\u0026quot;: 45, \u0026quot;BTTPredefinedActionName\u0026quot;: \u0026quot;Show Desktop\u0026quot;, \u0026quot;BTTEnabled2\u0026quot;: 1, \u0026quot;BTTAlternateModifierKeys\u0026quot;: 0, \u0026quot;BTTRepeatDelay\u0026quot;: 0, \u0026quot;BTTUUID\u0026quot;: \u0026quot;AF9F2E7B-4415-4BD9-8389-CF8501E8CDCC\u0026quot;, \u0026quot;BTTNotesInsteadOfDescription\u0026quot;: 0, \u0026quot;BTTEnabled\u0026quot;: 1, \u0026quot;BTTModifierMode\u0026quot;: 0, \u0026quot;BTTOrder\u0026quot;: 1, \u0026quot;BTTDisplayOrder\u0026quot;: 0 }, { \u0026quot;BTTTriggerType\u0026quot;: 0, \u0026quot;BTTTriggerClass\u0026quot;: \u0026quot;BTTTriggerTypeKeyboardShortcut\u0026quot;, \u0026quot;BTTPredefinedActionType\u0026quot;: 21, \u0026quot;BTTPredefinedActionName\u0026quot;: \u0026quot;Maximize Window\u0026quot;, \u0026quot;BTTAdditionalConfiguration\u0026quot;: \u0026quot;1572904\u0026quot;, \u0026quot;BTTEnabled2\u0026quot;: 1, \u0026quot;BTTKeyboardShortcutKeyboardType\u0026quot;: 5750, \u0026quot;BTTRepeatDelay\u0026quot;: 0, \u0026quot;BTTUUID\u0026quot;: \u0026quot;6A1F00BD-97DA-406F-94A0-299C83FDD70A\u0026quot;, \u0026quot;BTTTriggerOnDown\u0026quot;: 1, \u0026quot;BTTNotesInsteadOfDescription\u0026quot;: 0, \u0026quot;BTTLayoutIndependentChar\u0026quot;: \u0026quot;8\u0026quot;, \u0026quot;BTTEnabled\u0026quot;: 1, \u0026quot;BTTModifierMode\u0026quot;: 0, \u0026quot;BTTShortcutKeyCode\u0026quot;: 91, \u0026quot;BTTShortcutModifierKeys\u0026quot;: 1572864, \u0026quot;BTTOrder\u0026quot;: 3, \u0026quot;BTTDisplayOrder\u0026quot;: 0, \u0026quot;BTTAutoAdaptToKeyboardLayout\u0026quot;: 0 }, { \u0026quot;BTTTriggerType\u0026quot;: 0, \u0026quot;BTTTriggerClass\u0026quot;: \u0026quot;BTTTriggerTypeKeyboardShortcut\u0026quot;, \u0026quot;BTTPredefinedActionType\u0026quot;: 270, \u0026quot;BTTPredefinedActionName\u0026quot;: \u0026quot;Restore last saved window layout\u0026quot;, \u0026quot;BTTAdditionalConfiguration\u0026quot;: \u0026quot;1572904\u0026quot;, \u0026quot;BTTEnabled2\u0026quot;: 1, \u0026quot;BTTKeyboardShortcutKeyboardType\u0026quot;: 5750, \u0026quot;BTTRepeatDelay\u0026quot;: 0, \u0026quot;BTTUUID\u0026quot;: \u0026quot;7CFD2C3F-D079-4449-BD03-0391797DCC16\u0026quot;, \u0026quot;BTTTriggerOnDown\u0026quot;: 1, \u0026quot;BTTNotesInsteadOfDescription\u0026quot;: 0, \u0026quot;BTTLayoutIndependentChar\u0026quot;: \u0026quot;s\u0026quot;, \u0026quot;BTTEnabled\u0026quot;: 1, \u0026quot;BTTModifierMode\u0026quot;: 0, \u0026quot;BTTShortcutKeyCode\u0026quot;: 1, \u0026quot;BTTShortcutModifierKeys\u0026quot;: 1572864, \u0026quot;BTTOrder\u0026quot;: 5, \u0026quot;BTTDisplayOrder\u0026quot;: 0, \u0026quot;BTTAutoAdaptToKeyboardLayout\u0026quot;: 0 }, { \u0026quot;BTTTriggerType\u0026quot;: 0, \u0026quot;BTTTriggerClass\u0026quot;: \u0026quot;BTTTriggerTypeKeyboardShortcut\u0026quot;, \u0026quot;BTTPredefinedActionType\u0026quot;: 48, \u0026quot;BTTPredefinedActionName\u0026quot;: \u0026quot;Maximize Window to Next Monitor\u0026quot;, \u0026quot;BTTAdditionalConfiguration\u0026quot;: \u0026quot;1572904\u0026quot;, \u0026quot;BTTEnabled2\u0026quot;: 1, \u0026quot;BTTKeyboardShortcutKeyboardType\u0026quot;: 5750, \u0026quot;BTTRepeatDelay\u0026quot;: 0, \u0026quot;BTTUUID\u0026quot;: \u0026quot;97A815A5-3DB7-4836-A225-69070A11B65D\u0026quot;, \u0026quot;BTTTriggerOnDown\u0026quot;: 1, \u0026quot;BTTNotesInsteadOfDescription\u0026quot;: 0, \u0026quot;BTTLayoutIndependentChar\u0026quot;: \u0026quot;5\u0026quot;, \u0026quot;BTTEnabled\u0026quot;: 1, \u0026quot;BTTModifierMode\u0026quot;: 0, \u0026quot;BTTShortcutKeyCode\u0026quot;: 87, \u0026quot;BTTShortcutModifierKeys\u0026quot;: 1572864, \u0026quot;BTTOrder\u0026quot;: 2, \u0026quot;BTTDisplayOrder\u0026quot;: 0, \u0026quot;BTTAutoAdaptToKeyboardLayout\u0026quot;: 0 }, { \u0026quot;BTTTriggerType\u0026quot;: 0, \u0026quot;BTTTriggerClass\u0026quot;: \u0026quot;BTTTriggerTypeKeyboardShortcut\u0026quot;, \u0026quot;BTTPredefinedActionType\u0026quot;: 20, \u0026quot;BTTPredefinedActionName\u0026quot;: \u0026quot;Maximize Window Right Half\u0026quot;, \u0026quot;BTTAdditionalConfiguration\u0026quot;: \u0026quot;1572904\u0026quot;, \u0026quot;BTTEnabled2\u0026quot;: 1, \u0026quot;BTTKeyboardShortcutKeyboardType\u0026quot;: 5750, \u0026quot;BTTRepeatDelay\u0026quot;: 0, \u0026quot;BTTUUID\u0026quot;: \u0026quot;0785E15C-FFDA-4C90-862A-BEB6B9B53D56\u0026quot;, \u0026quot;BTTTriggerOnDown\u0026quot;: 1, \u0026quot;BTTNotesInsteadOfDescription\u0026quot;: 0, \u0026quot;BTTLayoutIndependentChar\u0026quot;: \u0026quot;6\u0026quot;, \u0026quot;BTTEnabled\u0026quot;: 1, \u0026quot;BTTModifierMode\u0026quot;: 0, \u0026quot;BTTShortcutKeyCode\u0026quot;: 88, \u0026quot;BTTShortcutModifierKeys\u0026quot;: 1572864, \u0026quot;BTTOrder\u0026quot;: 1, \u0026quot;BTTDisplayOrder\u0026quot;: 0, \u0026quot;BTTAutoAdaptToKeyboardLayout\u0026quot;: 0 }, { \u0026quot;BTTTriggerType\u0026quot;: 0, \u0026quot;BTTTriggerClass\u0026quot;: \u0026quot;BTTTriggerTypeKeyboardShortcut\u0026quot;, \u0026quot;BTTPredefinedActionType\u0026quot;: 269, \u0026quot;BTTPredefinedActionName\u0026quot;: \u0026quot;Save current window layout\u0026quot;, \u0026quot;BTTAdditionalConfiguration\u0026quot;: \u0026quot;1572904\u0026quot;, \u0026quot;BTTEnabled2\u0026quot;: 1, \u0026quot;BTTKeyboardShortcutKeyboardType\u0026quot;: 5750, \u0026quot;BTTRepeatDelay\u0026quot;: 0, \u0026quot;BTTUUID\u0026quot;: \u0026quot;4DEDE991-F2C1-49CC-912C-8539915B865F\u0026quot;, \u0026quot;BTTTriggerOnDown\u0026quot;: 1, \u0026quot;BTTNotesInsteadOfDescription\u0026quot;: 0, \u0026quot;BTTLayoutIndependentChar\u0026quot;: \u0026quot;s\u0026quot;, \u0026quot;BTTEnabled\u0026quot;: 1, \u0026quot;BTTModifierMode\u0026quot;: 0, \u0026quot;BTTShortcutKeyCode\u0026quot;: 1, \u0026quot;BTTShortcutModifierKeys\u0026quot;: 1572864, \u0026quot;BTTOrder\u0026quot;: 4, \u0026quot;BTTDisplayOrder\u0026quot;: 0, \u0026quot;BTTAutoAdaptToKeyboardLayout\u0026quot;: 0 }, { \u0026quot;BTTTriggerType\u0026quot;: 107, \u0026quot;BTTTriggerTypeDescription\u0026quot;: \u0026quot;4 Finger Swipe Down\u0026quot;, \u0026quot;BTTTriggerClass\u0026quot;: \u0026quot;BTTTriggerTypeTouchpadAll\u0026quot;, \u0026quot;BTTPredefinedActionType\u0026quot;: 5, \u0026quot;BTTPredefinedActionName\u0026quot;: \u0026quot;Mission Control\u0026quot;, \u0026quot;BTTEnabled2\u0026quot;: 1, \u0026quot;BTTAlternateModifierKeys\u0026quot;: 0, \u0026quot;BTTRepeatDelay\u0026quot;: 0, \u0026quot;BTTUUID\u0026quot;: \u0026quot;38408EAB-5F27-4843-BD5C-7DDAAD725052\u0026quot;, \u0026quot;BTTNotesInsteadOfDescription\u0026quot;: 0, \u0026quot;BTTEnabled\u0026quot;: 1, \u0026quot;BTTModifierMode\u0026quot;: 0, \u0026quot;BTTOrder\u0026quot;: 0, \u0026quot;BTTDisplayOrder\u0026quot;: 0 }, { \u0026quot;BTTTriggerType\u0026quot;: 0, \u0026quot;BTTTriggerClass\u0026quot;: \u0026quot;BTTTriggerTypeKeyboardShortcut\u0026quot;, \u0026quot;BTTPredefinedActionType\u0026quot;: 19, \u0026quot;BTTPredefinedActionName\u0026quot;: \u0026quot;Maximize Window Left Half\u0026quot;, \u0026quot;BTTAdditionalConfiguration\u0026quot;: \u0026quot;1572904\u0026quot;, \u0026quot;BTTEnabled2\u0026quot;: 1, \u0026quot;BTTKeyboardShortcutKeyboardType\u0026quot;: 5750, \u0026quot;BTTRepeatDelay\u0026quot;: 0, \u0026quot;BTTUUID\u0026quot;: \u0026quot;C9ED09DC-40F3-43C9-9FDF-5C7A31312921\u0026quot;, \u0026quot;BTTTriggerOnDown\u0026quot;: 1, \u0026quot;BTTNotesInsteadOfDescription\u0026quot;: 0, \u0026quot;BTTLayoutIndependentChar\u0026quot;: \u0026quot;4\u0026quot;, \u0026quot;BTTEnabled\u0026quot;: 1, \u0026quot;BTTModifierMode\u0026quot;: 0, \u0026quot;BTTShortcutKeyCode\u0026quot;: 86, \u0026quot;BTTShortcutModifierKeys\u0026quot;: 1572864, \u0026quot;BTTOrder\u0026quot;: 0, \u0026quot;BTTDisplayOrder\u0026quot;: 0, \u0026quot;BTTAutoAdaptToKeyboardLayout\u0026quot;: 0 }, { \u0026quot;BTTTriggerType\u0026quot;: 123, \u0026quot;BTTTriggerTypeDescription\u0026quot;: \u0026quot;1 Finger Tap Top Right\u0026quot;, \u0026quot;BTTTriggerClass\u0026quot;: \u0026quot;BTTTriggerTypeTouchpadAll\u0026quot;, \u0026quot;BTTPredefinedActionType\u0026quot;: 49, \u0026quot;BTTPredefinedActionName\u0026quot;: \u0026quot;Launch Application \\/ Open File \\/ Start Apple Script …\u0026quot;, \u0026quot;BTTLaunchPath\u0026quot;: \u0026quot;file:\\/\\/\\/Applications\\/Slidepad.app\\/\u0026quot;, \u0026quot;BTTEnabled2\u0026quot;: 1, \u0026quot;BTTAlternateModifierKeys\u0026quot;: 0, \u0026quot;BTTRepeatDelay\u0026quot;: 0, \u0026quot;BTTUUID\u0026quot;: \u0026quot;65403F16-56A0-4C59-B0B9-CBFCCA993915\u0026quot;, \u0026quot;BTTNotesInsteadOfDescription\u0026quot;: 0, \u0026quot;BTTEnabled\u0026quot;: 1, \u0026quot;BTTModifierMode\u0026quot;: 0, \u0026quot;BTTOrder\u0026quot;: 2, \u0026quot;BTTDisplayOrder\u0026quot;: 0 } ] } ], \u0026quot;BTTPresetSnapAreas\u0026quot;: [ ] } ","permalink":"https://cha2hyun.github.io/posts/mac-brew-list/","summary":"맥 초기화 및 새로 구매 시 셋업해야하는 부분들을 정리했습니다. brew, iterm2, oh my zsh, powerlevel10k, gh, rosetta, vscode, font 등","title":"macOS Setup Guide"},{"content":"Intro This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme. by Hugo Authors\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code Code Blocks Inline Code This is Inline Code\nOnly pre This is pre text Code block with backticks \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with backticks and language specified 1 2 3 4 5 6 7 8 9 10 11 12 13 14 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;meta name=\u0026#34;description\u0026#34; content=\u0026#34;Sample article showcasing basic Markdown syntax and formatting for HTML elements.\u0026#34; /\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; import hello print(hello) Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Gist List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://cha2hyun.github.io/posts/markdown-syntac-guide/","summary":"마크다운 신택스 가이드 by Hugo Authors","title":"Markdown Syntax Guide"}]